install.packages('BTM')
library(udpipe)
packages.install(udpipe)
install.packages(udpipe)
install.packages("udpipe")
library(udpipe)
library(BTM) # topic modelling
# visualise model
library(textplot)
install.packages("textplot")
library(udpipe)
library(BTM) # topic modelling
# visualise model
library(textplot)
library(ggraph)
install.packages("ggraph")
library(udpipe)
library(BTM) # topic modelling
# visualise model
library(textplot)
library(ggraph)
library(concaveman)
install.packages("concaveman")
library(udpipe)
library(BTM) # topic modelling
# visualise model
library(textplot)
library(ggraph)
library(concaveman)
data("brussels_reviews_anno", package = "udpipe")
## Taking only nouns of Dutch data
x <- subset(brussels_reviews_anno, language == "nl")
x <- subset(x, xpos %in% c("NN", "NNP", "NNS"))
x <- x[, c("doc_id", "lemma")]
## Building the model
set.seed(321)
model  <- BTM(x, k = 3, beta = 0.01, iter = 1000, trace = 100)
## Inspect the model - topic frequency + conditional term probabilities
model$theta
topicterms <- terms(model, top_n = 10)
topicterms
scores <- predict(model, newdata = x)
# If you set background to TRUE
# The first topic is set to a background topic that equals to the empirical word distribution.
# This can be used to filter out common words.
set.seed(321)
model      <- BTM(x, k = 5, beta = 0.01, background = TRUE, iter = 1000, trace = 100)
topicterms <- terms(model, top_n = 5)
topicterms
plot(model)
install.packages("rmarkdown")
data("brussels_reviews_anno", package = "udpipe")
data
data("brussels_reviews_anno", package = "udpipe")
library(ggraph)
df <- read.csv("data/cleaned_tweets_largest_community_btm2.csv")
data(df)
View(df)
df <- read.csv("data/cleaned_tweets_largest_community_btm2.csv")
data(df)
head(df)
set.seed(321)
model  <- BTM(df, k = 3, beta = 0.01, iter = 1000, trace = 100)
# visualise model
library(textplot)
library(BTM) # topic modelling
set.seed(321)
data(df)
set.seed(321)
model$theta
topicterms <- terms(model, top_n = 10)
scores <- predict(model, newdata = x)
scores <- predict(model, newdata = df)
model      <- BTM(df, k = 5, beta = 0.01, background = TRUE, iter = 1000, trace = 100)
plot(model)
View(df)
scores
model      <- BTM(df, k = 20, beta = 0.01, background = TRUE, iter = 1000, trace = 100)
plot(model)
model      <- BTM(df, k = 20, beta = 0.01, background = TRUE, iter = 1000, trace = 100)
plot(model)
topicterms <- terms(model, top_n = 20)
plot(model)
